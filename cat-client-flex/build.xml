<?xml version="1.0" encoding="UTF-8"?>
<project name="cat-client-flex" default="make-wrapped-swf">

	<property environment="env" />
	<property name="deploy.dir" value="deploy"/>	
	<property name="src.home" value="src"/>
	<property name="html.template.home" value="html-template"/>
	<property name="APP_ROOT" value="src"/>
	<property name="DEPLOY_DIR" value="${deploy.dir}"/>
	
	<taskdef resource="flexTasks.tasks"/>

	<target name="set.flex.home" unless="flex.home">
		<property name="flex.home" value="../flex-sdk"/>
	</target>

	<target name="set.cat.web.home" unless="cat.web.home">
		<property name="cat.web.home" value="../cat-web"/>
	</target>
	
	<target name="set.cat.common.flex.home" unless="cat.common.flex.home">
		<property name="cat.common.flex.home" value="../cat-common-flex"/>
	</target>
	
	<target name="set.flex.common.lib.home" unless="flex.common.lib.home">
		<property name="flex.common.lib.home" value="../flex-common-lib"/>
	</target>
	
	<target name="get.build.number" unless="env.BUILD_NUMBER">
		<property name="build.number" value="dev"/>
		<echo message="Build # is '${build.number}'"/>
	</target>
	
	<target name="set.build.number" depends="get.build.number" if="env.BUILD_NUMBER">
		<property name="build.number" value="${env.BUILD_NUMBER}"/>
		<echo message="Build # is '${build.number}'"/>
	</target>

	<target name="init" depends="set.flex.home,set.cat.web.home,set.build.number,set.cat.common.flex.home,set.flex.common.lib.home">
		<property name="FLEX_HOME" value="${flex.home}"/>
		<path id="ear.classpath">
			<fileset dir="${cat.home}">
				<include name="lib/*.jar"/>
				<include name="EarContent/*.jar"/>
				<include name="EarContent/lib/*.jar"/>
			</fileset>
		</path>
	</target>
	
	<target name="clean" depends="init">
		<delete dir="${deploy}" failonerror="false"/>		
		<mkdir dir="${deploy.dir}"/>
	</target>
	
	<target name="build" depends="clean">
		<mxmlc file="${APP_ROOT}/client.mxml" 
				output="${DEPLOY_DIR}/client.swf"
				actionscript-file-encoding="UTF-8"
				keep-generated-actionscript="false"
				incremental="false"
				services="${cat.web.home}/WebContent/WEB-INF/flex/services-config.xml"
				context-root="cat"
				debug="true"
				fork="true"
				maxmemory="1024m">
	     	<compiler.keep-as3-metadata name="Property" />
	        <load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>
			<source-path path-element="${src.home}"/>
			<source-path path-element="${cat.common.flex.home}/src" />
			<source-path path-element="${flex.common.lib.home}/src" />
				
            <compiler.library-path dir="." append="true">
                <include name="libs" />
             </compiler.library-path>
			<compiler.library-path dir="${cat.web.home}/WebContent/WEB-INF/flex" append="true">
				<include name="libs"/>
				<include name="libs/player"/>
				<include name="locale/{locale}"/>
			</compiler.library-path>
		</mxmlc>
		<copy todir="${deploy.dir}/assets">
			<fileset dir="${src.home}/assets">
				<include name="*"/>
				<include name="**/*"/>
				<exclude name=".svn"/>
				<exclude name="**/.svn"/>
			</fileset>
		</copy>
	</target>
	
	<target name="dev.copy.swf" depends="set.cat.web.home">
		<delete dir="${cat.web.home}/WebContent/client"/>
		<copy todir="${cat.web.home}/WebContent/client" failonerror="false">
			<fileset dir="deploy">
				<include name="**/*"/>
				<exclude name=".svn"/>
				<exclude name="**/.svn"/>
			</fileset>
		</copy>
		<copy todir="${cat.web.home}/WebContent/client" failonerror="false">
			<fileset dir="bin-debug">
				<include name="**/*"/>
				<exclude name=".svn"/>
				<exclude name="**/.svn"/>
			</fileset>
		</copy>
	</target>
	
	<target name="make-wrapped-swf" depends="build">
		<html-wrapper 
            title="CAT Client Tool v1.0.1.${build.number}"
            file="index.html"
            height="100%"
            width="100%"
            application="client"
            swf="client"
            history="false"
            template="express-installation"
            output="${DEPLOY_DIR}"/>
	</target>	
</project>