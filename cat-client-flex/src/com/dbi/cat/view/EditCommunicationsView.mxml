<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" height="100%" 
	xmlns:view="com.dbi.cat.view.*" 
	xmlns:workspace="com.dbi.cat.view.workspace.*" 
	xmlns:mate="http://mate.asfusion.com/"
	showCloseButton="true"
	close="onClose()"
	layout="absolute"
	title="{modifiedCampaign.name}">
	<mx:Script>
		<![CDATA[
			import mx.effects.Fade;
			import com.dbi.cat.event.ClientEvent;
			import com.dbi.cat.event.ImportEvent;
			import com.dbi.cat.common.vo.ConnectorVO;
			import com.dbi.cat.common.vo.CampaignVO;
			import com.dbi.cat.common.vo.NodeVO;
			import com.asfusion.mate.events.Listener;
			import com.dbi.cat.event.LayoutInfoEvent;
			import mx.events.IndexChangedEvent;
			import mx.collections.ArrayCollection;
			import com.dbi.cat.event.CampaignTestEvent;
			import com.dbi.cat.view.workspace.Node;
			import com.dbi.event.CustomMessageEvent;
			import com.dbi.controls.CustomMessage;
			import com.dbi.cat.event.CampaignEvent;
			import com.dbi.cat.event.NavigationEvent;
			import com.dbi.cat.event.WorkspaceEvent;
			
			
			[Bindable]
			public var publishedCampaign:CampaignVO;
			
			[Bindable]
			public var modifiedCampaign:CampaignVO;
			
			[Bindable]
			public var isTesting:Boolean;
			
			private var _statusMessage:String;
			[Bindable]
			public function get statusMessage():String
			{
				return _statusMessage;
			}
			public function set statusMessage(value:String):void
			{
				_statusMessage = value;
			}
			
			private var _currentTestNode:NodeVO;
			public function get currentTestNode():NodeVO
			{
				return _currentTestNode;	
			}
			public function set currentTestNode(value:NodeVO):void
			{
				_currentTestNode = value;
				if (isTesting)
				{
					ModifiedWorkspace.unSelectAllWorkspaceItems();
					if (currentTestNode != null)
						ModifiedWorkspace.selectWorkspaceItemByUID(currentTestNode.uid);
				}
			}
			
			
			private function onClose():void
			{
				ModifiedWorkspace.closeMenuItems();
				CurrentWorkspace.closeMenuItems();
				
				// Repopulate clients to determine keywords that have been used
				dispatchEvent(new ClientEvent(ClientEvent.LIST_CLIENTS));
				
				// Remove the listener event
				dispatchEvent(new CampaignEvent(CampaignEvent.CLOSE_COMMUNICATIONS));
			
			}
			private function publish(e:CustomMessageEvent):void
			{
				if (e.ButtonText == "Yes")
				{
					var event:CampaignEvent = new CampaignEvent(CampaignEvent.PUBLISH_CAMPAIGN);
					event.campaign = modifiedCampaign;
					dispatchEvent(event);
				}
			}
			private function confirmPublish():void
			{
				// Validation probably shouldn't be done here
				// Validate campaign before allowing publish
				var valid:Boolean = true;
				for each (var node:NodeVO in modifiedCampaign.nodes)
					valid = valid && node.valid;
				for each (var connector:ConnectorVO in modifiedCampaign.connectors)
					valid = valid && connector.valid;
					
				if (!valid)
				{
					CustomMessage.show("There are items that are not complete and cannot be published.  Please check all items with an exclamation point for missing information.");
				}
				else
				{
					CustomMessage.show("Are you sure you want to make this campaign live?",
						["Yes", "No"],
						publish);
				}
			}
			private function testCampaign():void
			{
				ModifiedWorkspace.unSelectAllWorkspaceItems();
				
				var event:CampaignTestEvent = new CampaignTestEvent(CampaignTestEvent.START_TEST);
				event.campaign = modifiedCampaign;
				dispatchEvent(event);
			}
			private function importAddresses():void
			{
				dispatchEvent(new ImportEvent(ImportEvent.OPEN_IMPORT_WINDOW));
			}
		]]>
	</mx:Script>
	<mx:Fade id="fadeEffect" 
		duration="800"
		alphaFrom="0" alphaTo="1"
		target="{StatusMessageBox}" />
	<view:CommunicationComponentsView  left="0" top="0" bottom="0" width="100"/>
	<mx:HBox right="0" left="100" top="0" bottom="0">
		<mx:TabNavigator id="WorkspaceTabs"
			right="0" left="0" top="0" bottom="0"
			paddingLeft="0" paddingBottom="0" paddingRight="0" paddingTop="0" width="100%" height="100%">
			<workspace:WorkspaceView id="ModifiedWorkspace" 
				label="Modified Version" 
				width="100%" height="100%"
				campaign="{modifiedCampaign}"
				readonly="{isTesting}" />
			<workspace:WorkspaceView id="CurrentWorkspace" 
				enabled="{!isTesting}"
				label="Published Version" 
				width="100%" height="100%"
				readonly="true"
				campaign="{publishedCampaign}" />
		</mx:TabNavigator>
		<view:TestCampaignView height="100%" width="275"
			visible="{isTesting}"
			includeInLayout="{isTesting}"  borderSides="top" borderStyle="solid" borderThickness="30" borderColor="#FFFFFF"/>
	</mx:HBox>
	<mx:HBox top="0" right="5" left="350"
		verticalAlign="middle" 
		horizontalAlign="right"
		height="28">
		<mx:Button label="Import"
			toolTip="Import a list of addresses to enter into this campaign"
			click="importAddresses()"
			visible="{WorkspaceTabs.selectedIndex == 1}"
			includeInLayout="{WorkspaceTabs.selectedIndex == 1}"
			enabled="{publishedCampaign != null}" />
		<mx:Button label="Test"
			click="testCampaign()"
			visible="{WorkspaceTabs.selectedIndex == 0 &amp;&amp; !isTesting}"
			includeInLayout="{WorkspaceTabs.selectedIndex == 0 &amp;&amp; !isTesting}" />
		<mx:Button label="Publish" 
			click="confirmPublish()"
			visible="{WorkspaceTabs.selectedIndex == 0 &amp;&amp; !isTesting}"
			includeInLayout="{WorkspaceTabs.selectedIndex == 0 &amp;&amp; !isTesting}" />
	</mx:HBox>
	<mx:Canvas id="StatusMessageBox"
		visible="{statusMessage.length != 0}"
		styleName="workspaceStatusMessage"
		bottom="0" right="0">
		<mx:Text text="{statusMessage}" />
	</mx:Canvas>
</mx:TitleWindow>
