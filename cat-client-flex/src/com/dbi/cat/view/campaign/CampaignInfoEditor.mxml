<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	width="100%" height="100%"
	label="{entryType}" xmlns:controls="com.dbi.controls.*">
	<mx:Script>
		<![CDATA[
			import com.dbi.cat.common.constants.EntryPointType;
			import com.dbi.cat.common.vo.OutgoingEntryPointVO;
			import com.dbi.cat.common.vo.EntryDataVO;
			import com.dbi.cat.common.vo.EntryPointVO;
			import com.dbi.cat.common.vo.NodeVO;
			import com.dbi.cat.common.vo.CampaignInfoVO;
			import com.dbi.cat.common.vo.EntryPointDefinitionVO;
			import com.dbi.cat.common.vo.CampaignVO;
			import mx.collections.ArrayCollection;
			import com.dbi.cat.common.vo.ClientVO;
			import com.dbi.cat.common.vo.AddInMessageVO;
			import com.dbi.cat.common.constants.AddInMessageType;
			
			private var _currentCampaign:CampaignVO;
			[Bindable]
			public function get currentCampaign():CampaignVO
			{
				return _currentCampaign;
			}
			public function set currentCampaign(c:CampaignVO):void
			{
				_currentCampaign = c;
				dispatchEvent(new Event("dataUpdate"));	
			}
			
			private var _entryType:String;
			[Bindable]
			public function get entryType():String
			{
				return _entryType;
			}
			public function set entryType(value:String):void
			{
				_entryType = value;
				dispatchEvent(new Event("dataUpdate"));	
			}
			
			[Bindable(event="dataUpdate")]
			private function get entryPoints():ArrayCollection
			{
				var ret:ArrayCollection = new ArrayCollection();
				if (currentCampaign != null)
				{
					for each (var node:NodeVO in currentCampaign.nodes)
					{
						if (node is EntryPointVO ||
							node is OutgoingEntryPointVO)
						{
							var ep:Object = node;
							for each (var ed:EntryDataVO in ep.entryData)
							{
								if (ed.entryType == entryType)
									ret.addItem(node);
							}
						}
					}
				}
				return ret;
			}
			
			[Bindable(event="dataUpdate")]
			private function get addInMessage():AddInMessageVO
			{
				if (currentCampaign != null &&
					currentCampaign.addInMessages != null &&
					entryType != null)
				{
					for each (var add:AddInMessageVO in currentCampaign.addInMessages)
					{
						if (add.entryType == entryType &&
							add.type == AddInMessageType.CLIENT)
							return add;
					}
				}
				return null;
			}
			
			[Bindable(event="dataUpdate")]
			private function get campaignInfoAutoStartUID():CampaignInfoVO
			{
				if (currentCampaign != null &&
					currentCampaign.campaignInfos != null &&
					entryType != null)
				{
					for each (var info:CampaignInfoVO in currentCampaign.campaignInfos)
					{
						if (info.entryType == entryType &&
							info.name == CampaignInfoVO.AUTO_START_NODE_UID)
							return info;
					}
				}
				return null;
			}
			
			private function changeAddInMessage():void
			{
				if (addInMessage != null)
				{
					addInMessage.message = AddIn.text;
				}
				else
				{
					var add:AddInMessageVO = new AddInMessageVO();
					add.campaignId = currentCampaign.primaryKey.toString();
					add.entryType = entryType;
					add.type = AddInMessageType.CLIENT;
					add.message = AddIn.text;
					
					if (currentCampaign.addInMessages == null)
						currentCampaign.addInMessages = new ArrayCollection();
					currentCampaign.addInMessages.addItem(add);
				}
			}
			
			private function changeAutoStart():void
			{
				if (campaignInfoAutoStartUID != null)
				{
					campaignInfoAutoStartUID.value = EntryPoint.selectedItem.uid;
				}
				else
				{
					var ci:CampaignInfoVO = new CampaignInfoVO();
					ci.campaignId = currentCampaign.primaryKey.toString();
					ci.entryType = entryType;
					ci.name = CampaignInfoVO.AUTO_START_NODE_UID;
					ci.value = EntryPoint.selectedItem.uid;
					
					if (currentCampaign.campaignInfos == null)
						currentCampaign.campaignInfos = new ArrayCollection();
					currentCampaign.campaignInfos.addItem(ci);
				}
			}
			
			private function changeIsAutoStart():void
			{
				if (campaignInfoAutoStartUID != null)
				{
					campaignInfoAutoStartUID.value = null;
				}
			}
			
			private function getEntryPointLabel(ep:Object):String
			{
				var ret:String = "";
				for each (var ed:EntryDataVO in ep.entryData)
				{
					if (ed.entryType == entryType)
					{
						ret = ep.name + " - " + ed.entryPoint;
						break;
					}
				}
				return ret;
			}
		]]>
	</mx:Script>
	<mx:Form width="100%" paddingBottom="0" paddingLeft="5" paddingRight="5" paddingTop="0">
		<mx:FormItem label="Auto Start"
			visible="{EntryPointType.allowAutoStart(entryType)}"
			includeInLayout="{EntryPointType.allowAutoStart(entryType)}">
			<mx:HBox>
				<mx:CheckBox id="IsAutoStart"
					selected="{campaignInfoAutoStartUID.value != null}"
					change="changeIsAutoStart()" />
				<mx:Label text="Entry Point:" />
				<controls:AdvancedComboBox id="EntryPoint"
					enabled="{IsAutoStart.selected}"
					dataProvider="{entryPoints}"
					selectedBindingProperty="uid"
					selectedBindingValue="{campaignInfoAutoStartUID.value}"
					labelFunction="getEntryPointLabel"
					change="changeAutoStart()" />
			</mx:HBox>
		</mx:FormItem>
		<mx:FormItem label="Add In Message" width="100%">
			<mx:TextArea id="AddIn"
				width="100%" height="100"
				change="changeAddInMessage()"
				text="{addInMessage.message}" />
		</mx:FormItem>
	</mx:Form>
</mx:Canvas>
