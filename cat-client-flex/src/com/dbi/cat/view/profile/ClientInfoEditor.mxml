<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	width="100%" height="100%"
	label="{entryType.name}">
	<mx:Script>
		<![CDATA[
			import com.dbi.cat.common.constants.AddInMessageType;
			import com.dbi.cat.common.constants.EntryPointType;
			import com.dbi.cat.common.vo.AddInMessageVO;
			import com.dbi.cat.common.vo.ClientInfoVO;
			import com.dbi.cat.common.vo.ClientVO;
			import com.dbi.cat.event.ClientEvent;
			
			import mx.collections.ArrayCollection;
			
			[Bindable]
			public var editable:Boolean = true;
			
			private var _currentClient:ClientVO;
			[Bindable]
			public function get currentClient():ClientVO
			{
				return _currentClient;
			}
			public function set currentClient(c:ClientVO):void
			{
				_currentClient = c;
				dispatchEvent(new Event("dataUpdate"));	
			}
			
			private var _entryType:EntryPointType;
			[Bindable]
			public function get entryType():EntryPointType
			{
				return _entryType;
			}
			public function set entryType(value:EntryPointType):void
			{
				_entryType = value;
				dispatchEvent(new Event("dataUpdate"));	
			}
			
			
			[Bindable(event="dataUpdate")]
			private function get addInMessage():AddInMessageVO
			{
				if (currentClient != null &&
					currentClient.addInMessages != null &&
					entryType != null)
				{
					for each (var add:AddInMessageVO in currentClient.addInMessages)
					{
						if (add.entryType == entryType.name &&
							add.type == AddInMessageType.CLIENT)
							return add;
					}
				}
				return null;
			}
			
			[Bindable(event="dataUpdate")]
			private function get messageCredits():String
			{
				var clientInfo:ClientInfoVO;
				
				if (currentClient != null &&
					currentClient.clientInfos != null &&
					entryType != null)
				{
					for each (var info:ClientInfoVO in currentClient.clientInfos)
					{
						if (info.entryType == entryType.name &&
							info.name == ClientInfoVO.KEY_MESSAGE_CREDITS)
						{
							clientInfo = info;
							break;
						}
					}
				}
				
				if (info == null)
				{
					if (isNaN(entryType.defaultMessageCredits))
						return "Unlimited";
					else
						return "0";
				}
				else if (info.value == null)
				{	
					return "Unlimited";
				}
				else
				{
					return info.value;
				}
			}
			
			private function changeAddInMessage():void
			{
				if (addInMessage != null)
				{
					addInMessage.message = AddIn.text;
				}
				else
				{
					var add:AddInMessageVO = new AddInMessageVO();
					add.clientId = currentClient.clientId.toString();
					add.entryType = entryType.name;
					add.type = AddInMessageType.CLIENT;
					add.message = AddIn.text;
					
					if (currentClient.addInMessages == null)
						currentClient.addInMessages = new ArrayCollection();
					currentClient.addInMessages.addItem(add);
				}
			}
			
			private function addCredits():void
			{
				dispatchEvent(new ClientEvent(ClientEvent.OPEN_ADD_CREDITS));
			}
		]]>
	</mx:Script>
	<mx:Form right="0" left="0" top="0" bottom="0">
		<mx:FormItem label="Message Credits:" width="100%">
			<mx:HBox width="100%">
				<mx:Label text="{messageCredits}" />
				<mx:Button label="Add Credits"
						   visible="{messageCredits != 'Unlimited'}"
						   click="addCredits()"/>
			</mx:HBox>
		</mx:FormItem>
		<mx:FormItem label="Add In Message:" width="100%" height="100%">
			<mx:TextArea id="AddIn"
				editable="{this.editable}"
				left="0" right="0"
				change="changeAddInMessage()"
				text="{addInMessage.message}"  
				width="100%" height="100%"/>
		</mx:FormItem>
	</mx:Form>
</mx:Canvas>
