<?xml version="1.0" encoding="utf-8"?>
<Node xmlns="com.dbi.cat.view.workspace.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:components="com.dbi.cat.view.components.*"
	implements="com.dbi.cat.view.workspace.ILayoutInfoItem"
	width="400" height="300" xmlns:vo="com.dbi.cat.vo.*"
	editWindowHeight="370"
	editWindowWidth="380"
	displayIcon="{couponIcon}"
	workspaceIcon="{couponIcon}"
	label="Coupon"
	creationComplete="init()">
	<mx:Script>
		<![CDATA[
			import com.dbi.cat.event.CampaignMessageEvent;
			import com.dbi.cat.common.constants.CampaignMode;
			import com.dbi.cat.common.constants.EntryPointType;
			import com.dbi.cat.common.vo.CouponNodeVO;
			import mx.events.ChildExistenceChangedEvent;
			import com.dbi.cat.common.vo.ClientVO;
			import com.dbi.cat.common.vo.CampaignVO;
			import com.dbi.cat.common.vo.MessageVO;
			import com.dbi.cat.common.vo.LayoutInfoVO;
			
			
			[Bindable(event="nodeUpdate")]
			public function get couponVO():CouponNodeVO
			{
				return editNodeVO as CouponNodeVO;
			}
			public function set couponVO(c:CouponNodeVO):void
			{
				nodeVO = c;
			}
			
			override public function get valid():Boolean
			{
				return couponVO != null && couponVO.valid;
			}
			
			private function get maxCharacters():Number
			{
				return EntryPointType.TWITTER_MAX_CHARACTERS;
			}
			
			// Addin message of current campaign
			private var _addInMessage:String = "";
			[Bindable]
			public function get addInMessage():String
			{
				return _addInMessage;
			}
			public function set addInMessage(value:String):void
			{
				_addInMessage = value;
				dispatchEvent(new Event("changeAddInMessage"));
			}
			
			/**
			 * Initialize on creation complete
			 */
			private function init():void
			{
				updateAvailableMessage();
				AvailableCharCount. visible = maxCharacters != 0;
				UnavailableCharCount. visible = maxCharacters != 0;
			}
			
			private function updateAvailableMessage():void
			{
				// Update entered text
				couponVO.availableMessage = AvailableMessage.text;
				
				// Replace tokens
				var reg:RegExp = new RegExp("{.*?}", "/g");
				couponVO.availableMessage = couponVO.availableMessage.replace(reg, couponCodeToken);
				
				dispatchEvent(new Event("availableCharacterUpdate"));
			}
			private function updateUnavailableMessage():void
			{
				couponVO.unavailableMessage = UnavailableMessage.text;
				dispatchEvent(new Event("unavailableCharacterUpdate"));
			}
			
			private function setInfiniteRedemptions():void
			{
				if (InfiniteRedemptions.selected)
					couponVO.maxRedemptions = CouponNodeVO.INFINITE_REDEMPTION_COUNT;
				else
					couponVO.maxRedemptions = 0;
			}
			private function setInfiniteCoupons():void
			{
				if (InfiniteCoupons.selected)
					couponVO.maxCoupons = CouponNodeVO.INFINITE_COUPONS_COUNT;
				else
					couponVO.maxCoupons = 0;
			}
			private function changeCodeType():void
			{
				if (CouponType.selection == RandomCode)
					couponVO.couponCode = null;
				else
					couponVO.couponCode = "";
				updateAvailableMessage();
			}
			private function changeStaticCouponCode():void
			{
				couponVO.couponCode = StaticCodeValue.text;
				updateAvailableMessage();
			}
			private function get couponCodeToken():String
			{
				var ret:String = CouponNodeVO.START_COUPON_CODE;
				if (couponVO.couponCode == null)
					ret += CouponNodeVO.RANDOM_CODE_LENGTH + "_CHAR_CODE";
				else
					ret += StaticCodeValue.text;
				ret += CouponNodeVO.END_COUPON_CODE;
				return ret;
			}
			
			[Bindable(event="changeAddInMessage")]
			[Bindable(event="unavailableCharacterUpdate")]
			private function get unavailableCharacterCount():Number
			{
				var ret:Number = addInMessage == null ? 0 : addInMessage.length;
				if (couponVO != null &&
					couponVO.unavailableMessage != null)
				{
					ret += couponVO.unavailableMessage.length;
				}
				return ret;
			}
			
			[Bindable(event="changeAddInMessage")]
			[Bindable(event="availableCharacterUpdate")]
			private function get availableCharacterCount():Number
			{
				var ret:Number = addInMessage == null ? 0 : addInMessage.length;
				if (couponVO != null &&
					couponVO.availableMessage != null)
				{
					ret += couponVO.availableMessage.length;
					
					// Correct count for merged coupon codes
					if (couponVO.availableMessage.indexOf(couponCodeToken) > -1)
					{
						// Get coupone matches
						var reg:RegExp = new RegExp(couponCodeToken, "/g");
						var matchCount:Number = couponVO.availableMessage.match(reg).length;
						
						// Subtract coupon token lengths
						ret -= couponCodeToken.length * matchCount;
						
						// Add in length of merged coupons
						if (couponVO.couponCode == null)
							ret += (CouponNodeVO.RANDOM_CODE_LENGTH * matchCount);
						else
							ret += (couponVO.couponCode.length * matchCount);
					}
				}
				return ret;
			}
			
			private function previewMessage(message:String):void
			{
				// Open the preview window
				dispatchEvent(new CampaignMessageEvent(CampaignMessageEvent.OPEN_MESSAGE_PREVIEW));
				
				// Request the message parts
				var event:CampaignMessageEvent = new CampaignMessageEvent(CampaignMessageEvent.GET_MESSAGE_PARTS);
				event.campaign = workspace.campaign;
				event.message = message;
				dispatchEvent(event);
			}
		]]>
	</mx:Script>
	<editContent>
		<mx:Form right="0" left="0" top="0" bottom="0" 
			paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5">
			<mx:FormItem label="Title" width="100%">
				<mx:TextInput id="Title" width="225"
					text="{couponVO.name}"
					change="{couponVO.name = Title.text}" />
			</mx:FormItem>
			<mx:FormItem label="Max Coupons"
				enabled="{workspace.campaign.mode != CampaignMode.TEMPLATE}">
				<mx:HBox width="100%">
					<mx:TextInput id="MaxCoupons" width="80"
						restrict="[0-9]"
						text="{couponVO.maxCoupons}"
						change="{couponVO.maxCoupons = new Number(MaxCoupons.text)}"
						visible="{couponVO.maxCoupons != CouponNodeVO.INFINITE_COUPONS_COUNT}"
						includeInLayout="{couponVO.maxCoupons != CouponNodeVO.INFINITE_COUPONS_COUNT}" />
					<mx:CheckBox id="InfiniteCoupons"
						label="Infinite"
						selected="{couponVO.maxCoupons == CouponNodeVO.INFINITE_COUPONS_COUNT}"
						change="{setInfiniteCoupons()}" />
				</mx:HBox>
			</mx:FormItem>
			<mx:FormItem label="Max Redemptions"
				enabled="{workspace.campaign.mode != CampaignMode.TEMPLATE}">
				<mx:HBox width="100%">
					<mx:TextInput id="MaxRedemptions" width="80"
						restrict="[0-9]"
						text="{couponVO.maxRedemptions}"
						change="{couponVO.maxRedemptions = new Number(MaxRedemptions.text)}"
						visible="{couponVO.maxRedemptions != CouponNodeVO.INFINITE_REDEMPTION_COUNT}"
						includeInLayout="{couponVO.maxRedemptions != CouponNodeVO.INFINITE_REDEMPTION_COUNT}" />
					<mx:CheckBox id="InfiniteRedemptions"
						label="Infinite"
						selected="{couponVO.maxRedemptions == CouponNodeVO.INFINITE_REDEMPTION_COUNT}"
						change="{setInfiniteRedemptions()}" />
				</mx:HBox>
			</mx:FormItem>
			<mx:FormItem label="Coupon Code"
				enabled="{workspace.campaign.mode != CampaignMode.TEMPLATE}">
				<mx:HBox width="100%">
					<mx:RadioButtonGroup id="CouponType"
						change="changeCodeType()" />
					<mx:RadioButton id="RandomCode"
						label="Random"
						group="{CouponType}"
						selected="{couponVO.couponCode == null}" />
					<mx:RadioButton id="StaticCode"
						label="Static"
						group="{CouponType}"
						selected="{couponVO.couponCode != null}" />
					<mx:TextInput id="StaticCodeValue"
						width="80"
						text="{couponVO.couponCode}"
						change="changeStaticCouponCode()"
						visible="{StaticCode.selected}" />
				</mx:HBox>
			</mx:FormItem>
			<mx:FormItem label="Unavailable Date"
				enabled="{workspace.campaign.mode != CampaignMode.TEMPLATE}">
				<mx:DateField id="UnavailableDate"
					editable="true"
					selectedDate="{couponVO.unavailableDate}"
					change="{couponVO.unavailableDate = UnavailableDate.selectedDate}" />
			</mx:FormItem>
			<mx:FormItem label="Available" required="true" width="100%" 
				enabled="{workspace.campaign.mode != CampaignMode.TEMPLATE}">
					<mx:TextArea id="AvailableMessage"  width="225" height="60"
						styleName="couponMessage"
						text="{couponVO.availableMessage}" 
						change="updateAvailableMessage()"/>
			</mx:FormItem>
			<mx:FormItem id="AvailableCharCount" width="100%"
				enabled="{workspace.campaign.mode != CampaignMode.TEMPLATE}">
				<mx:HBox width="100%">
					<mx:Label htmlText="{availableCharacterCount + ' chars'}" />
					<mx:Spacer width="100%" />
					<mx:Button label="Preview Message"
						click="previewMessage(AvailableMessage.text)" />
				</mx:HBox>
			</mx:FormItem>
			<mx:FormItem label="Unavailable" 
				enabled="{workspace.campaign.mode != CampaignMode.TEMPLATE}">
				<mx:TextArea id="UnavailableMessage" width="225" height="60"
					text="{couponVO.unavailableMessage}"
					change="updateUnavailableMessage()"  />
			</mx:FormItem>
			<mx:FormItem id="UnavailableCharCount" width="100%"
				enabled="{workspace.campaign.mode != CampaignMode.TEMPLATE}">
				<mx:HBox width="100%">
					<mx:Label htmlText="{unavailableCharacterCount + ' chars'}" />
					<mx:Spacer width="100%" />
					<mx:Button label="Preview Message"
						click="previewMessage(UnavailableMessage.text)" />
				</mx:HBox>
			</mx:FormItem>
		</mx:Form>
	</editContent>
</Node>
