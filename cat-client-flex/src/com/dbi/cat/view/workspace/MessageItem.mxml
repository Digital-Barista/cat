<?xml version="1.0" encoding="utf-8"?>
<Node xmlns="com.dbi.cat.view.workspace.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:components="com.dbi.cat.view.components.*"
	implements="com.dbi.cat.view.workspace.ILayoutInfoItem"
	width="400" height="300" xmlns:vo="com.dbi.cat.vo.*"
	editWindowHeight="{showAddin ? 300 : 230}"
	editWindowWidth="300"
	displayIcon="{messageIcon}"
	workspaceIcon="{messageIcon}"
	x="{nodeVO.layoutInfo.x}"
	y="{nodeVO.layoutInfo.y}"
	label="Message"
	creationComplete="init()">
	<mx:Script>
		<![CDATA[
			import com.dbi.cat.common.constants.SMSConstants;
			import mx.events.ChildExistenceChangedEvent;
			import com.dbi.cat.common.vo.ClientVO;
			import com.dbi.cat.common.vo.CampaignVO;
			import com.dbi.cat.common.vo.MessageVO;
			import com.dbi.cat.common.vo.LayoutInfoVO;
			
			private var _campaignMap:Object;
			[Bindable]
			public function get campaignMap():Object
			{
				return _campaignMap;
			}
			public function set campaignMap(c:Object):void
			{
				_campaignMap = c;
				setAddInMessage();
			}
			
			private var _clientMap:Object;
			[Bindable]
			public function get clientMap():Object
			{
				return _clientMap;
			}
			public function set clientMap(c:Object):void
			{
				_clientMap = c;
				setAddInMessage();
			}
			
			[Bindable(event="nodeUpdate")]
			public function get messageVO():MessageVO
			{
				return editNodeVO as MessageVO;
			}
			public function set messageVO(m:MessageVO):void
			{
				nodeVO = m;
			}
			public function get layoutInfo():LayoutInfoVO
			{
				return messageVO.layoutInfo;
			}
			public function set layoutInfo(info:LayoutInfoVO):void
			{
				messageVO.layoutInfo = info;
			}
			public function get voUID():String
			{
				return messageVO.uid;
			}
			private function updateMessage():void
			{
				if (Message.text.length + addInMessage.length <= SMSConstants.MAX_CHARACTERS)
					messageVO.message = Message.text;
				else
				{
					messageVO.message = messageVO.message.substring(0, SMSConstants.MAX_CHARACTERS - addInMessage.length);
					Message.text = messageVO.message;
				}
			}
			
			override public function get valid():Boolean
			{
				return messageVO != null && messageVO.valid;
			}
			
			private function get showAddin():Boolean
			{
				return addInMessage.length > 0;
			}
			
			private function init():void
			{
			}
			
			[Bindable]
			private var addInMessage:String;
			private function setAddInMessage():void
			{
				addInMessage = "";
				if (messageVO != null &&
					campaignMap != null &&
					clientMap != null)
				{
					var campaign:CampaignVO = campaignMap[messageVO.campaignUID];
					var client:ClientVO = clientMap[campaign.clientPK];
						
					if (campaign.addInMessage != null &&
						campaign.addInMessage.length > 0)
						addInMessage += campaign.addInMessage;
					else if (client.userAddInMessage != null)
						addInMessage += client.userAddInMessage;
						
					if (client.adminAddInMessage != null)
						addInMessage += client.adminAddInMessage;
				}
			}
		]]>
	</mx:Script>
	<editContent>
		<mx:Form right="0" left="0" top="0" bottom="0" 
			paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5">
			<mx:FormItem label="Title" width="100%">
				<mx:TextInput id="Title" width="200"
					text="{messageVO.name}"
					change="{messageVO.name = Title.text}" />
			</mx:FormItem>
			<mx:FormItem label="Message" required="true" width="100%" >
					<mx:TextArea id="Message"  width="200" height="120"
						maxChars="{SMSConstants.MAX_CHARACTERS}"
						text="{messageVO.message}" 
						change="updateMessage()"/>
			</mx:FormItem>
			<mx:FormItem label="Add In" visible="{showAddin}" includeInLayout="{showAddin}">
				<mx:TextArea id="AddIn" width="200" height="70"
					text="{addInMessage}"
					editable="false" />
			</mx:FormItem>
			<mx:FormItem>
				<mx:Label text="{messageVO.message.length + AddIn.text.length + '/' + SMSConstants.MAX_CHARACTERS + ' chars'}" />
			</mx:FormItem>
		</mx:Form>
	</editContent>
</Node>
