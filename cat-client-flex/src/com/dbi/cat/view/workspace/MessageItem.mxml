<?xml version="1.0" encoding="utf-8"?>
<Node xmlns="com.dbi.cat.view.workspace.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:components="com.dbi.cat.view.components.*"
	implements="com.dbi.cat.view.workspace.ILayoutInfoItem"
	width="400" height="300" xmlns:vo="com.dbi.cat.vo.*"
	editWindowHeight="600"
	editWindowWidth="800"
	displayIcon="{messageIcon}"
	workspaceIcon="{messageIcon}"
	label="Message"
	creationComplete="init()">
	<mx:Script>
		<![CDATA[
			import com.dbi.cat.common.constants.CampaignMode;
			import com.dbi.cat.common.constants.EntryPointType;
			import com.dbi.cat.common.vo.CampaignVO;
			import com.dbi.cat.common.vo.ClientVO;
			import com.dbi.cat.common.vo.LayoutInfoVO;
			import com.dbi.cat.common.vo.MessageVO;
			import com.dbi.cat.event.CampaignEvent;
			import com.dbi.cat.event.CampaignMessageEvent;
			
			import mx.events.ChildExistenceChangedEvent;
			
			// Add in message for current campaign and client
			private var _addInMessage:String;
			[Bindable]
			public function get addInMessage():String
			{
				return _addInMessage;
			}
			public function set addInMessage(value:String):void
			{
				_addInMessage = value;
				dispatchEvent(new Event("changeAddInMessage"));
			}
			
			[Bindable(event="nodeUpdate")]
			public function get messageVO():MessageVO
			{
				return editNodeVO as MessageVO;
			}
			public function set messageVO(m:MessageVO):void
			{
				nodeVO = m;
			}
			private function get maxCharacters():Number
			{
				return EntryPointType.TWITTER.maxCharacters;
			}
			
			private function updateMessage():void
			{
				dispatchEvent(new Event("changeMessage"));
			}
			
			override public function get valid():Boolean
			{
				return messageVO != null && messageVO.valid;
			}
			
			[Bindable(event="changeAddInMessage")]
			private function get showAddin():Boolean
			{
				return addInMessage != null &&
					addInMessage.length > 0;
			}
			
			[Bindable(event="changeMessage")]
			[Bindable(event="changeAddInMessage")]
			private function get characterCountMessage():String
			{
				var count:Number = 0;
				
				if (EntryTypeTabs.selectedChild == DefaultMessage)
				{
					count = DefaultMessage.messageText.length;
				}
				else
				{
					count = MessageEditor(EntryTypeTabs.selectedChild).messageText.length;
				}
				return count + " chars";
			}
			
			private function init():void
			{
			}
			
			private function previewMessage():void
			{
				// Open the preview window
				dispatchEvent(new CampaignMessageEvent(CampaignMessageEvent.OPEN_MESSAGE_PREVIEW));
				
				// Request the message parts
				var event:CampaignMessageEvent = new CampaignMessageEvent(CampaignMessageEvent.GET_MESSAGE_NODE_PARTS);
				event.campaign = workspace.campaign;
				event.node = messageVO;
				dispatchEvent(event);
			}
			
			private function updateDefaultMessage():void
			{
				messageVO.message = DefaultMessage.messageText;
				dispatchEvent(new Event("changeMessage"));
			}
			private function updateMessageType(text:String, entryType:EntryPointType):void
			{
				messageVO.messages[entryType.name] = text;
				dispatchEvent(new Event("changeMessage"));
			}
		]]>
	</mx:Script>
	<editContent>
		<mx:HBox width="100%">
			<mx:Label text="Title" />
			<mx:TextInput id="Title" width="100%"
				text="{messageVO.name}"
				change="{messageVO.name = Title.text}" />
		</mx:HBox>
		<mx:TabNavigator id="EntryTypeTabs"
						 width="100%" height="100%"
						 tabOffset="20" paddingTop="0"
						 change="{dispatchEvent(new Event('changeMessage'))}">
			<MessageEditor id="DefaultMessage"
						   label="Default Message"
						   messageText="{messageVO.message}"
						   change="{updateDefaultMessage()}" />
			<mx:Repeater id="EntryTypeRepeater" 
						 dataProvider="{EntryPointType.allTypes}">
				<MessageEditor id="MessageTypeEditor"
							   label="{EntryTypeRepeater.currentItem.name}"
							   messageText="{messageVO.messages[EntryTypeRepeater.currentItem.name]}"
							   change="{updateMessageType(event.currentTarget.messageText, event.currentTarget.getRepeaterItem())}" />
			</mx:Repeater>
		</mx:TabNavigator>
		<mx:HBox id="CharCount" width="100%">
			<mx:Label htmlText="{characterCountMessage}" />
			<mx:Spacer width="100%" />
			<mx:Button label="Preview Message"
				click="previewMessage()" />
		</mx:HBox>
	</editContent>
</Node>
