<?xml version="1.0" encoding="utf-8"?>
<Node xmlns="com.dbi.cat.view.workspace.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:components="com.dbi.cat.view.components.*"
	implements="com.dbi.cat.view.workspace.ILayoutInfoItem"
	width="400" height="300" xmlns:vo="com.dbi.cat.vo.*"
	editWindowHeight="260"
	editWindowWidth="300"
	displayIcon="{messageIcon}"
	workspaceIcon="{messageIcon}"
	label="Message"
	creationComplete="init()">
	<mx:Script>
		<![CDATA[
			import com.dbi.cat.event.CampaignEvent;
			import com.dbi.cat.event.CampaignMessageEvent;
			import com.dbi.cat.common.constants.CampaignMode;
			import com.dbi.cat.common.constants.EntryPointType;
			import mx.events.ChildExistenceChangedEvent;
			import com.dbi.cat.common.vo.ClientVO;
			import com.dbi.cat.common.vo.CampaignVO;
			import com.dbi.cat.common.vo.MessageVO;
			import com.dbi.cat.common.vo.LayoutInfoVO;
			
			// Add in message for current campaign and client
			private var _addInMessage:String;
			[Bindable]
			public function get addInMessage():String
			{
				return _addInMessage;
			}
			public function set addInMessage(value:String):void
			{
				_addInMessage = value;
				dispatchEvent(new Event("changeAddInMessage"));
			}
			
			[Bindable(event="nodeUpdate")]
			public function get messageVO():MessageVO
			{
				return editNodeVO as MessageVO;
			}
			public function set messageVO(m:MessageVO):void
			{
				nodeVO = m;
			}
			private function get maxCharacters():Number
			{
				return EntryPointType.TWITTER_MAX_CHARACTERS;
			}
			
			private function updateMessage():void
			{
				messageVO.message = Message.text;
				dispatchEvent(new Event("changeMessage"));
			}
			
			override public function get valid():Boolean
			{
				return messageVO != null && messageVO.valid;
			}
			
			[Bindable(event="changeAddInMessage")]
			private function get showAddin():Boolean
			{
				return addInMessage != null &&
					addInMessage.length > 0;
			}
			
			[Bindable(event="changeMessage")]
			[Bindable(event="changeAddInMessage")]
			private function get characterCountMessage():String
			{
				var count:Number = 0;
				
				if (addInMessage != null)
					count += addInMessage.length;
					
				if (messageVO != null &&
					messageVO.message != null)
					count += messageVO.message.length;
					
				if (count > maxCharacters)
					return "<font color='#DD0000'>" + count + "</font>";
				else
					return count.toString();
				
			}
			
			private function init():void
			{
				CharCount. visible = maxCharacters != Number.POSITIVE_INFINITY;
			}
			
			private function previewMessage():void
			{
				// Open the preview window
				dispatchEvent(new CampaignMessageEvent(CampaignMessageEvent.OPEN_MESSAGE_PREVIEW));
				
				// Request the message parts
				var event:CampaignMessageEvent = new CampaignMessageEvent(CampaignMessageEvent.GET_MESSAGE_PARTS);
				event.campaign = workspace.campaign;
				event.message = Message.text;
				dispatchEvent(event);
			}
		]]>
	</mx:Script>
	<editContent>
		<mx:Form right="0" left="0" top="0" bottom="0" 
			paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5">
			<mx:FormItem label="Title" width="100%">
				<mx:TextInput id="Title" width="200"
					text="{messageVO.name}"
					change="{messageVO.name = Title.text}" />
			</mx:FormItem>
			<mx:FormItem label="Message" required="true" width="100%" 
				enabled="{workspace.campaign.mode != CampaignMode.TEMPLATE}">
					<mx:TextArea id="Message"  width="200" height="120"
						text="{messageVO.message}" 
						change="updateMessage()"/>
			</mx:FormItem>
			<mx:FormItem id="CharCount" width="100%"
				label="Char Count">
				<mx:HBox width="100%">
					<mx:Label htmlText="{characterCountMessage}" />
					<mx:Spacer width="100%" />
					<mx:Button label="Preview Message"
						click="previewMessage()" />
				</mx:HBox>
			</mx:FormItem>
		</mx:Form>
	</editContent>
</Node>
