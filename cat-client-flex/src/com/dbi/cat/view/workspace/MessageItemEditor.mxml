<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
		   xmlns:workspace="com.dbi.cat.view.workspace.*"
		   width="100%" 
		   height="100%"
		   creationComplete="init()">
	<mx:Script>
		<![CDATA[
			import com.dbi.cat.common.constants.CampaignMode;
			import com.dbi.cat.common.constants.EntryPointType;
			import com.dbi.cat.common.vo.CampaignVO;
			import com.dbi.cat.common.vo.ClientVO;
			import com.dbi.cat.common.vo.LayoutInfoVO;
			import com.dbi.cat.common.vo.MessageVO;
			import com.dbi.cat.event.CampaignEvent;
			import com.dbi.cat.event.CampaignMessageEvent;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.controls.Button;
			import mx.events.ChildExistenceChangedEvent;
			
			private var _messageVO:MessageVO;
			[Bindable(event="updateMessage")]
			public function get messageVO():MessageVO
			{
				return _messageVO;
			}
			public function set messageVO(value:MessageVO):void
			{
				_messageVO = value;
				updateMessages();
				dispatchEvent(new Event("updateMessage"));
			}
			
			[Bindable]
			public var campaign:CampaignVO;
			
			
			private function init():void
			{
				createTabs();
			}
			
			private function updateMessages():void
			{
				for each (var editor:MessageEditor in EntryTypeTabs.getChildren())
				{
					editor.campaign = campaign;
					if (messageVO)
					{
						editor.messageTitle = messageVO.name;
						editor.defaultMessageText = messageVO.message;
						
						if (editor.entryType)
						{
							if (!messageVO.messages)
							{
								messageVO.messages = new Object();
							}
							editor.messageText = messageVO.messages[editor.entryType.name];
						}
					}
				}
			}
			
			private function createTabs():void
			{
				var types:ArrayCollection = EntryPointType.allTypes;
				for each(var type:EntryPointType in types)
				{
					var editor:MessageEditor = new MessageEditor();
					editor.label = type.name;
					editor.entryType = type;
					editor.addEventListener(Event.CHANGE, updateMessageType);
					BindingUtils.bindProperty(editor, "campaign", this, "campaign");
					EntryTypeTabs.addChild(editor);
				}
				updateMessages();
			}
			
			private function updateTitle():void
			{
				messageVO.name = Title.text;
				updateMessages();
			}
			private function updateDefaultMessage():void
			{
				messageVO.message = DefaultMessage.messageText;
				updateMessages();
			}
			private function updateMessageType(e:Event):void
			{
				var editor:MessageEditor = e.target as MessageEditor;
				messageVO.messages[editor.entryType.name] = editor.messageText;
			}
			
			private function tabChange():void
			{
				for each (var editor:MessageEditor in EntryTypeTabs.getChildren())
				{
					var type:EntryPointType = editor.entryType;
					if (type)
					{
						var index:int = EntryTypeTabs.getChildIndex(editor);
						var tab:Button = EntryTypeTabs.getTabAt(index);
						
						if (messageVO.messages != null &&
							messageVO.messages[type.name] != null &&
							messageVO.messages[type.name].length > 0)
						{
							tab.setStyle("color", 0xFF0000);
						}
						else
						{
							tab.setStyle("color", null);
						}
					}
				}
			}
		]]>
	</mx:Script>
	<mx:HBox width="100%">
		<mx:Label text="Title" />
		<mx:TextInput id="Title" width="100%"
					  text="{messageVO.name}"
					  change="{updateTitle()}" />
	</mx:HBox>
	<mx:TabNavigator id="EntryTypeTabs"
					 width="100%" top="50" bottom="0"
					 tabOffset="20" paddingTop="0"
					 change="{tabChange()}">
		<workspace:MessageEditor id="DefaultMessage"
					   label="Default Message"
					   useModifyMessage="false"
					   messageText="{messageVO.message}"
					   change="{updateDefaultMessage()}" />
	</mx:TabNavigator>
</mx:Canvas>
