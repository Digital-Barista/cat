<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" 
		   xmlns:workspace="com.dbi.cat.view.workspace.*"
		   creationComplete="init()">
	<mx:Metadata>
		[Event(type="flash.events.Event", name="change")]
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import com.dbi.cat.common.constants.EntryPointType;
			import com.dbi.cat.common.vo.CampaignVO;
			import com.dbi.cat.common.vo.CouponNodeVO;
			import com.dbi.cat.common.vo.CouponVO;
			import com.dbi.cat.common.vo.UserVO;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.controls.Button;
			
			[Bindable]
			public var currentUser:UserVO;
			
			[Bindable]
			public var campaign:CampaignVO;
			
			[Bindable]
			public var showingAvailable:Boolean = true;
			
			private var _couponToken:String;
			[Bindable]
			public function get couponToken():String
			{
				return _couponToken;
			}
			public function set couponToken(value:String):void
			{
				_couponToken = value;
			}
			
			private var _couponVO:CouponNodeVO;
			[Bindable]
			public function get couponVO():CouponNodeVO
			{
				return _couponVO;
			}
			public function set couponVO(value:CouponNodeVO):void
			{
				_couponVO = value;
				
				if (couponVO)
				{
					if (!couponVO.availableMessages)
						couponVO.availableMessages = new Object();
					
					if (!couponVO.unavailableMessages)
						couponVO.unavailableMessages = new Object();
				}
			}
			
			private function init():void
			{
				createTabs();
			}
			
			private function createTabs():void
			{
				var types:ArrayCollection = currentUser.entryPointTypes;
				for each(var type:EntryPointType in types)
				{
					var editor:MessageEditor = new MessageEditor();
					editor.label = type.name;
					editor.entryType = type;
					editor.addEventListener(Event.CHANGE, updateAvailableMessageType);
					BindingUtils.bindProperty(editor, "campaign", this, "campaign");
					BindingUtils.bindProperty(editor, "messageTitle", this, ["couponVO", "name"]);
					BindingUtils.bindProperty(editor, "defaultMessageText", this, ["couponVO", "availableMessage"]);
					BindingUtils.bindProperty(editor, "messageText", this, ["couponVO", "availableMessages", type.name]);
					AvailableEntryTypeTabs.addChild(editor);
					
					editor = new MessageEditor();
					editor.label = type.name;
					editor.entryType = type;
					editor.addEventListener(Event.CHANGE, updateUnavailableMessageType);
					BindingUtils.bindProperty(editor, "campaign", this, "campaign");
					BindingUtils.bindProperty(editor, "messageTitle", this, ["couponVO", "name"]);
					BindingUtils.bindProperty(editor, "defaultMessageText", this, ["couponVO", "unavailableMessage"]);
					BindingUtils.bindProperty(editor, "messageText", this, ["couponVO", "unavailableMessages", type.name]);
					UnavailableEntryTypeTabs.addChild(editor);
				}
			}
			
			
			private function changeMessageShowing():void
			{
				showingAvailable = AvailableGroup.selection == Available;
				
				// Update tab coloring
				tabChange();
			}
			
			
			private function updateDefaultAvailable():void
			{
				couponVO.availableMessage = DefaultAvailable.messageText;
				dispatchEvent(new Event(Event.CHANGE));
			}
			
			private function updateDefaultUnavailable():void
			{
				couponVO.unavailableMessage = DefaultUnavailable.messageText;
				dispatchEvent(new Event(Event.CHANGE));
			}
			
			private function updateAvailableMessageType(e:Event):void
			{
				var editor:MessageEditor = e.target as MessageEditor;
				couponVO.availableMessages[editor.entryType.name] = editor.messageText;
				dispatchEvent(new Event(Event.CHANGE));
				
			}
			private function updateUnavailableMessageType(e:Event):void
			{
				var editor:MessageEditor = e.target as MessageEditor;
				couponVO.unavailableMessages[editor.entryType.name] = editor.messageText;
				dispatchEvent(new Event(Event.CHANGE));
			}
			
			/**
			 * Update tab color if the message is not the default
			 */
			private function tabChange():void
			{
				for each (var editor:MessageEditor in AvailableEntryTypeTabs.getChildren())
				{
					var type:EntryPointType = editor.entryType;
					if (type)
					{
						var index:int = AvailableEntryTypeTabs.getChildIndex(editor);
						var tab:Button = AvailableEntryTypeTabs.getTabAt(index);
						
						if (couponVO.availableMessages != null &&
							couponVO.availableMessages[type.name] != null &&
							couponVO.availableMessages[type.name].length > 0)
						{
							tab.setStyle("color", 0xFF0000);
						}
						else
						{
							tab.setStyle("color", null);
						}
					}
				}
				
				for each (editor in UnavailableEntryTypeTabs.getChildren())
				{
					type = editor.entryType;
					if (type)
					{
						index = UnavailableEntryTypeTabs.getChildIndex(editor);
						tab = UnavailableEntryTypeTabs.getTabAt(index);
						
						if (couponVO.unavailableMessages != null &&
							couponVO.unavailableMessages[type.name] != null &&
							couponVO.unavailableMessages[type.name].length > 0)
						{
							tab.setStyle("color", 0xFF0000);
						}
						else
						{
							tab.setStyle("color", null);
						}
					}
				}
				dispatchEvent(new Event('changeMessage'));
			}
		]]>
	</mx:Script>
	<mx:RadioButtonGroup id="AvailableGroup"
						 change="{changeMessageShowing()}"/>
	<mx:HBox left="10">
		<mx:RadioButton id="Available"
						label="Available Message"
						group="{AvailableGroup}"
						selected="{showingAvailable}" />
		<mx:RadioButton id="Unavailable"
						label="Unavailable Message"
						group="{AvailableGroup}"
						selected="{!showingAvailable}" />
	</mx:HBox>
	
	<mx:ViewStack selectedIndex="{showingAvailable ? 0 : 1}" right="0" left="0" top="0" bottom="0"
				  creationPolicy="all">
		<mx:TabNavigator id="AvailableEntryTypeTabs"
						 width="100%" height="100%"
						 tabOffset="-10" paddingTop="0"
						 horizontalAlign="right"
						 change="{tabChange()}">
			<workspace:MessageEditor id="DefaultAvailable"
									 label="Default Message"
									 useModifyMessage="false"
									 messageText="{couponVO.availableMessage}"
									 change="updateDefaultAvailable()" />
		</mx:TabNavigator>
		<mx:TabNavigator id="UnavailableEntryTypeTabs"
						 width="100%" height="100%"
						 tabOffset="-10" paddingTop="0"
						 horizontalAlign="right"
						 change="{tabChange()}">
			<workspace:MessageEditor id="DefaultUnavailable"
									 label="Default Message"
									 useModifyMessage="false"
									 messageText="{couponVO.unavailableMessage}"
									 change="updateDefaultUnavailable()" />
		</mx:TabNavigator>
	</mx:ViewStack>
	
</mx:Canvas>
