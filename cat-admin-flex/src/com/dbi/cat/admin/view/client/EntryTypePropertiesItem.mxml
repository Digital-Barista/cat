<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" height="100%"
	label="{entryType}">
	<mx:Script>
		<![CDATA[
			import com.dbi.cat.common.constants.EntryPointType;
			import com.dbi.cat.common.constants.AddInMessageType;
			import com.dbi.cat.common.vo.AddInMessageVO;
			import mx.collections.ArrayCollection;
			import com.dbi.cat.common.vo.KeywordLimitVO;
			import com.dbi.cat.common.vo.ClientVO;
			
			private var _currentClient:ClientVO;
			[Bindable]
			public function get currentClient():ClientVO
			{
				return _currentClient;
			}
			public function set currentClient(c:ClientVO):void
			{
				_currentClient = c;
				dispatchEvent(new Event("dataUpdate"));	
			}
			
			private var _entryType:EntryPointType;
			[Bindable]
			public function get entryType():EntryPointType
			{
				return _entryType;
			}
			public function set entryType(value:EntryPointType):void
			{
				_entryType = value;
				dispatchEvent(new Event("dataUpdate"));	
			}
			
			[Bindable(event="dataUpdate")]
			private function get maxKeywords():String
			{
				if (keywordLimit != null &&
					!isNaN(keywordLimit.maxKeywords))
					return keywordLimit.maxKeywords.toString();
				return "";
			}
			
			private function get keywordLimit():KeywordLimitVO
			{
				if (currentClient != null &&
					currentClient.keywordLimits != null &&
					entryType != null)
				{
					for each (var limit:KeywordLimitVO in currentClient.keywordLimits)
					{
						if (limit.entryType == entryType.name)
							return limit;
					}
				}
				return null;
			}
			
			[Bindable(event="dataUpdate")]
			private function get addInMessage():AddInMessageVO
			{
				if (currentClient != null &&
					currentClient.addInMessages != null &&
					entryType != null)
				{
					for each (var add:AddInMessageVO in currentClient.addInMessages)
					{
						if (add.entryType == entryType.name &&
							add.type == AddInMessageType.ADMIN)
							return add;
					}
				}
				return null;
			}
			
			[Bindable(event="dataUpdate")]
			private function get isInfinite():Boolean
			{
				return maxKeywords == "0";
			}
			
			private function changeMax():void
			{
				if (keywordLimit != null)
				{
					keywordLimit.maxKeywords = new Number(MaxKeywords.text);
				}
				else
				{
					var key:KeywordLimitVO = new KeywordLimitVO();
					key.clientId = currentClient.clientId;
					key.entryType = entryType.name;
					key.maxKeywords = new Number(MaxKeywords.text);
					
					if (currentClient.keywordLimits == null)
						currentClient.keywordLimits = new ArrayCollection();
					currentClient.keywordLimits.addItem(key);
				}
				dispatchEvent(new Event("dataUpdate"));	
			}
			
			private function changeAddInMessage():void
			{
				if (addInMessage != null)
				{
					addInMessage.message = AddInMessage.text;
				}
				else
				{
					var add:AddInMessageVO = new AddInMessageVO();
					add.clientId = currentClient.clientId.toString();
					add.entryType = entryType.name;
					add.type = AddInMessageType.ADMIN;
					add.message = AddInMessage.text;
					
					if (currentClient.addInMessages == null)
						currentClient.addInMessages = new ArrayCollection();
					currentClient.addInMessages.addItem(add);
				}
			}
			private function changeInfinite():void
			{
				if (Infinite.selected)
					MaxKeywords.text = "0";
				else
					MaxKeywords.text = "5";
				changeMax();
			}
		]]>
	</mx:Script>
	<mx:Form>
		<mx:FormItem label="Keyword Limit">
			<mx:HBox>
				<mx:TextInput id="MaxKeywords"
					text="{maxKeywords}"
					change="{changeMax()}"
					restrict="0-9"
					width="50"
					enabled="{!isInfinite}" />
				<mx:CheckBox id="Infinite"
					label="Infinite"
					change="{changeInfinite()}"
					selected="{isInfinite}" />
			</mx:HBox>
		</mx:FormItem>
		<mx:FormItem label="Add In Message">
			<mx:TextArea id="AddInMessage"
				width="330"
				text="{addInMessage.message}"
				change="{changeAddInMessage()}" />
		</mx:FormItem>
	</mx:Form>
</mx:Canvas>
